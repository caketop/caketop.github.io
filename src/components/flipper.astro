---
// derived from https://codepen.io/gulshansainis/pen/yLymJRd?editors=1001

const platforms = [
  "Linux",
  "IoT",
  "Cloud",
  "Docker",
  "AWS",
  "VMware",
  "GCP",
  "OpenStack",
];

function toPct(seconds: number, duration: number): string {
  return String(Math.floor((seconds / duration) * 100)) + "%";
}

function createKeyframes(
  name: string,
  frames: Record<string, Record<string, string>>
): string {
  var css = "\n@keyframes " + name + " {\n";

  Object.entries(frames).map((entry) => {
    const key = entry[0];
    const frame = entry[1];

    css += "\t" + key + " {\n";

    Object.entries(frame).map((style) => {
      const prop = style[0];
      const value = style[1];

      css += "\t\t" + prop + ":" + value + ";\n";
    });

    css += "\t}\n";
  });

  return css + "}\n";
}

const rawDuration = 2.5 * platforms.length;

const a = toPct(0.3, rawDuration);
const b = toPct(0.75, rawDuration);
const c = toPct(2.285, rawDuration);
const d = toPct(3.375, rawDuration);

const keyframes = createKeyframes("flip", {
  "0%": {
    opacity: "0",
  },
  [a]: {
    opacity: "0",
  },
  [b]: {
    opacity: "1",
    "-webkit-transform": "translateY(0px)",
    transform: " translateY(0px)",
  },
  [c]: {
    opacity: "1",
    "-webkit-transform": "translateY(0px)",
    transform: "translateY(0px)",
  },
  [d]: {
    opacity: "0",
    "-webkit-transform": "translateY(-90px)",
    transform: "translateY(-90px)",
  },
  "80%": { opacity: "0" },
  "100%": { opacity: "0" },
});

const duration = String(rawDuration) + "s";
---

<style type="text/css" is:inline set:html={keyframes}>

</style>
<style define:vars={{ duration }}>
  .flipper-div {
    position: relative;
  }

  .flipper-item {
    animation-name: flip;
    animation-duration: var(--duration);
    animation-delay: var(--delay, 0s);
    animation-iteration-count: infinite;
    position: absolute;
    color: #90caf9;
    opacity: 0;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
  }
</style>
<div>
  <div class="flipper-div">
    {
      platforms.map((platform, i) => (
        <span class="flipper-item pt-2" style={"--delay: " + String(i * 2.5) + "s"}>
          {platform}
        </span>
      ))
    }
  </div>
</div>
